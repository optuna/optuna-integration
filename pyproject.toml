[build-system]
requires = ["setuptools >= 61.1.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "optuna-integration"
description = "Integration libraries of Optuna."
readme = "README.md"
license = { file = "LICENSE" }
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Intended Audience :: Science/Research",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.7",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3 :: Only",
  "Topic :: Scientific/Engineering",
  "Topic :: Scientific/Engineering :: Mathematics",
  "Topic :: Scientific/Engineering :: Artificial Intelligence",
  "Topic :: Software Development",
  "Topic :: Software Development :: Libraries",
  "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = [
  "optuna",
]
dynamic = ["version"]

[project.optional-dependencies]
test = [
  "pytest",
  "coverage",
  "fakeredis[lua]",
]
checking = [
  "black<24.0.0",
  "blackdoc",
  "hacking",
  "isort",
  "mypy",
  "types-PyYAML",
  "types-redis",
  "types-setuptools",
  "typing_extensions>=3.10.0.0",
]
document = [
    "cma",
    "pandas",
    "scikit-learn>=0.24.2",
    "scipy>=1.9.2; python_version>='3.8'",
    "sphinx",
    "sphinx_rtd_theme",
]
all = [
  "botorch",
  "catalyst",
  "catboost>=0.26; sys_platform!='darwin'",
  "catboost>=0.26,<1.2; sys_platform=='darwin'",
  "cma",
  "distributed",
  "fastai",
  "gpytorch",
  "lightgbm",
  "mxnet",
  "pandas",
  "shap",
  "scikit-learn>=0.24.2",
  "scikit-optimize",
  "scipy>=1.9.2; python_version>='3.8'",
  "skorch",
  "tensorboard",
  "tensorflow",
  "wandb",
  "xgboost",
  "torch",
]

[tool.setuptools.packages.find]
# where = ["."]
include = ["optuna_integration*"]

[tool.setuptools.dynamic]
version = {attr = "optuna_integration.version.__version__"}

[tool.black]
line-length = 99
target-version = ['py38']
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.venv
  | venv
  | _build
  | buck-out
  | build
  | dist
  | docs
)/
'''

[tool.isort]
profile = 'black'
src_paths = ['optuna_integration', 'tests', 'docs']
line_length = 99
lines_after_imports = 2
force_single_line = 'True'
force_sort_within_sections = 'True'
order_by_type = 'False'

[tool.pytest.ini_options]
addopts = "--color=yes"
