name: Checks and Tests

on:
  push:
    branches:
      - main
  pull_request: {}
  schedule:
    - cron: '0 23 * * SUN-THU'
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref == 'refs/heads/main' && github.run_number || github.ref }}
  cancel-in-progress: true

jobs:
  changes:
    if: (github.event_name == 'schedule' && github.repository == 'optuna/optuna-integration') || (github.event_name != 'schedule')
    runs-on: ubuntu-latest
    outputs:
      allennlp: ${{ steps.changes.outputs.allennlp }}
      botorch: ${{ steps.changes.outputs.botorch }}
      catboost: ${{ steps.changes.outputs.catboost }}
      chainer: ${{ steps.changes.outputs.chainer }}
      chainermn: ${{ steps.changes.outputs.chainermn }}
      cma: ${{ steps.changes.outputs.cma }}
      comet: ${{ steps.changes.outputs.comet }}
      dask: ${{ steps.changes.outputs.dask }}
      fastaiv2: ${{ steps.changes.outputs.fastaiv2 }}
      keras: ${{ steps.changes.outputs.keras }}
      lightgbm: ${{ steps.changes.outputs.lightgbm }}
      mlflow: ${{ steps.changes.outputs.mlflow }}
      pytorch_distributed: ${{ steps.changes.outputs.pytorch_distributed }}
      pytorch_ignite: ${{ steps.changes.outputs.pytorch_ignite }}
      pytorch_lightning: ${{ steps.changes.outputs.pytorch_lightning }}
      shap: ${{ steps.changes.outputs.shap }}
      sklearn: ${{ steps.changes.outputs.sklearn }}
      skorch: ${{ steps.changes.outputs.skorch }}
      tensorboard: ${{ steps.changes.outputs.tensorboard }}
      tfkeras: ${{ steps.changes.outputs.tfkeras }}
      wandb: ${{ steps.changes.outputs.wandb }}
      xgboost: ${{ steps.changes.outputs.xgboost }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v3
        id: changes
        with:
          filters: .github/file-filters.yml

  allennlp:
    if: needs.changes.outputs.allennlp == 'true'
    needs: changes
    uses: ./.github/workflows/checks_template.yml
    with:
      integration_name: 'allennlp'
      deprecated: true

  botorch:
    if: needs.changes.outputs.botorch == 'true'
    needs: changes
    uses: ./.github/workflows/checks_template.yml
    with:
      integration_name: 'botorch'
      deprecated: false

  catboost:
    if: needs.changes.outputs.catboost == 'true'
    needs: changes
    uses: ./.github/workflows/checks_template.yml
    with:
      integration_name: 'catboost'
      deprecated: false

  chainer:
    if: needs.changes.outputs.chainer == 'true'
    needs: changes
    uses: ./.github/workflows/checks_template.yml
    with:
      integration_name: 'chainer'
      deprecated: true

  chainermn:
    if: needs.changes.outputs.chainermn == 'true'
    needs: changes
    uses: ./.github/workflows/checks_template.yml
    with:
      integration_name: 'chainermn'
      deprecated: true

  cma:
    if: needs.changes.outputs.cma == 'true'
    needs: changes
    uses: ./.github/workflows/checks_template.yml
    with:
      integration_name: 'cma'
      deprecated: false

  comet:
    if: needs.changes.outputs.comet == 'true'
    needs: changes
    uses: ./.github/workflows/checks_template.yml
    with:
      integration_name: 'comet'
      deprecated: false

  dask:
    if: needs.changes.outputs.dask == 'true'
    needs: changes
    uses: ./.github/workflows/checks_template.yml
    with:
      integration_name: 'dask'
      deprecated: false

  fastaiv2:
    if: needs.changes.outputs.fastaiv2 == 'true'
    needs: changes
    uses: ./.github/workflows/checks_template.yml
    with:
      integration_name: 'fastaiv2'
      deprecated: false
      python_matrix: "['3.9', '3.10', '3.11', '3.12', '3.13']"

  keras:
    if: needs.changes.outputs.keras == 'true'
    needs: changes
    uses: ./.github/workflows/checks_template.yml
    with:
      integration_name: 'keras'
      deprecated: false

  lightgbm:
    if: needs.changes.outputs.lightgbm == 'true'
    needs: changes
    uses: ./.github/workflows/checks_template.yml
    with:
      integration_name: 'lightgbm'
      deprecated: false

  mlflow:
    if: needs.changes.outputs.mlflow == 'true'
    needs: changes
    uses: ./.github/workflows/checks_template.yml
    with:
      integration_name: 'mlflow'
      deprecated: false

  pytorch_distributed:
    if: needs.changes.outputs.pytorch_distributed == 'true'
    needs: changes
    uses: ./.github/workflows/checks_template.yml
    with:
      integration_name: 'pytorch_distributed'
      deprecated: false

  pytorch_ignite:
    if: needs.changes.outputs.pytorch_ignite == 'true'
    needs: changes
    uses: ./.github/workflows/checks_template.yml
    with:
      integration_name: 'pytorch_ignite'
      deprecated: false

  pytorch_lightning:
    if: needs.changes.outputs.pytorch_lightning == 'true'
    needs: changes
    uses: ./.github/workflows/checks_template.yml
    with:
      integration_name: 'pytorch_lightning'
      deprecated: false

  shap:
    if: needs.changes.outputs.shap == 'true'
    needs: changes
    uses: ./.github/workflows/checks_template.yml
    with:
      integration_name: 'shap'
      deprecated: false

  sklearn:
    if: needs.changes.outputs.sklearn == 'true'
    needs: changes
    uses: ./.github/workflows/checks_template.yml
    with:
      integration_name: 'sklearn'
      deprecated: false

  skorch:
    if: needs.changes.outputs.skorch == 'true'
    needs: changes
    uses: ./.github/workflows/checks_template.yml
    with:
      integration_name: 'skorch'
      # TODO: Remove the version constraint once https://github.com/uber/causalml/issues/808 is resolved.
      extra_cmds: pip install torch "scikit-learn<1.6.0"
      deprecated: false

  tensorboard:
    if: needs.changes.outputs.tensorboard == 'true'
    needs: changes
    uses: ./.github/workflows/checks_template.yml
    with:
      integration_name: 'tensorboard'
      deprecated: false

  tfkeras:
    if: needs.changes.outputs.tfkeras == 'true'
    needs: changes
    uses: ./.github/workflows/checks_template.yml
    with:
      integration_name: 'tfkeras'
      deprecated: false

  wandb:
    if: needs.changes.outputs.wandb == 'true'
    needs: changes
    uses: ./.github/workflows/checks_template.yml
    with:
      integration_name: 'wandb'
      deprecated: false

  xgboost:
    if: needs.changes.outputs.xgboost == 'true'
    needs: changes
    uses: ./.github/workflows/checks_template.yml
    with:
      integration_name: 'xgboost'
      # TODO: Remove the version constraint once https://github.com/optuna/optuna-integration/issues/216 is resolved.
      extra_cmds: pip install "xgboost<3.0.0"
      deprecated: false
